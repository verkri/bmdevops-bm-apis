
# 1. get affected apis
# 
# 2. for added/changed apis:
#   - read openapi version
#   - npm build, npm package
#   - maven build, maven package
# 2. for deleted apis:
#   - do nothing.
# 

name: Postsubmit
on:
  pull_request:
    branches:
      - master

jobs:
  # get-affected-apis:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: Get changed files
  #       id: changed-files
  #       uses: tj-actions/changed-files@v41
  #       with:
  #         json: true
  #         escape_json: false
  #         files: |
  #            specs/*.yml

  #   outputs:
  #     affected: ${{ steps.changed-files.outputs.all_changed_files }}
  #     deleted: ${{ steps.changed-files.outputs.deleted_files }}
  #     modified: ${{ steps.changed-files.outputs.modified_files }}

  npm-publish:
    runs-on: ubuntu-latest
    # needs: [get-affected-apis]

    # if: ${{ needs.get-affected-apis.outputs.affected != '[]' }}

    # strategy:
    #   fail-fast: false
    #   max-parallel: 4
    #   matrix: 
    #     apifile: ${{ fromJSON(needs.get-affected-apis.outputs.affected) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "21"
    
      - name: Npm Install
        working-directory: npm
        env:
          API_NPM_NAME: bm_petstore
          API_NPM_VERSION: 1.0.7
          API_FILEPATH: ../specs/bm_petstore.yml
        run: |
          envsubst < package.json.tmpl > package.json
          cat package.json
          npm install

      - name: Generate OpenAPI stubs
        working-directory: npm
        run: npm run gen

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        env:
          AWS_CODEARTIFACT_REGION: eu-west-1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_CODEARTIFACT_REGION }}

      - name: Authenticate to AWS CodeArtifact
        id: aws-auth
        env:
          AWS_CODEARTIFACT_DOMAIN_OWNER: 767398085282
          AWS_CODEARTIFACT_DOMAIN: bankmonitor
        run: |
          echo "token=$(aws codeartifact get-authorization-token --domain ${AWS_CODEARTIFACT_DOMAIN} --domain-owner ${AWS_CODEARTIFACT_DOMAIN_OWNER} --query authorizationToken --output text)" >> "${GITHUB_OUTPUT}"
          cat ${GITHUB_OUTPUT}

      - name: Publish to AWS CodeArtifact
        env:
          AWS_CODEARTIFACT_AUTH_TOKEN: ${{ steps.aws-auth.outputs.token }} 
          AWS_CODEARTIFACT_DOMAIN_OWNER: 767398085282
          AWS_CODEARTIFACT_DOMAIN: bankmonitor
          AWS_CODEARTIFACT_REGION: eu-west-1
          AWS_CODEARTIFACT_REPOSITORY: bm-apis
        working-directory: npm
        run: |
          envsubst < npmrc.tmpl > .npmrc
          npm publish

  maven-publish:
    runs-on: ubuntu-latest
    # needs: [get-affected-apis]

    # if: ${{ needs.get-affected-apis.outputs.affected != '[]' }}

    # strategy:
    #   fail-fast: false
    #   max-parallel: 4
    #   matrix: 
    #     apifile: ${{ fromJSON(needs.get-affected-apis.outputs.affected) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java and Maven
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "corretto"
    
      - name: Configure Maven Project
        working-directory: maven
        env:
          API_MAVEN_NAME: bm_petstore
          API_MAVEN_VERSION: 1.0.7
          API_FILEPATH: ../specs/bm_petstore.yml
          AWS_CODEARTIFACT_DOMAIN_OWNER: 767398085282
          AWS_CODEARTIFACT_DOMAIN: bankmonitor
          AWS_CODEARTIFACT_REGION: eu-west-1
          AWS_CODEARTIFACT_REPOSITORY: bm-apis
        run: |
          envsubst < ${API_MAVEN_NAME}.xml.tmpl > pom.xml
          cat pom.xml

      - name: Build Maven Package
        working-directory: maven
        run: |
          mvn clean install package

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        env:
          AWS_CODEARTIFACT_REGION: eu-west-1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_CODEARTIFACT_REGION }}

      - name: Authenticate to AWS CodeArtifact
        id: aws-auth
        env:
          AWS_CODEARTIFACT_DOMAIN_OWNER: 767398085282
          AWS_CODEARTIFACT_DOMAIN: bankmonitor
        run: |
          echo "token=$(aws codeartifact get-authorization-token --domain ${AWS_CODEARTIFACT_DOMAIN} --domain-owner ${AWS_CODEARTIFACT_DOMAIN_OWNER} --query authorizationToken --output text)" >> "${GITHUB_OUTPUT}"
          cat ${GITHUB_OUTPUT}

      - name: Publish to AWS CodeArtifact
        env:
          AWS_CODEARTIFACT_AUTH_TOKEN: ${{ steps.aws-auth.outputs.token }} 
          AWS_CODEARTIFACT_DOMAIN_OWNER: 767398085282
          AWS_CODEARTIFACT_DOMAIN: bankmonitor
          AWS_CODEARTIFACT_REGION: eu-west-1
          AWS_CODEARTIFACT_REPOSITORY: bm-apis
        working-directory: maven
        run: |
          envsubst < settings.xml.tmpl > settings.xml
          cat settings.xml
          mvn -s settings.xml deploy