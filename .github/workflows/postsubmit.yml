name: Postsubmit
on:
  pull_request:
    branches:
      - master

env:
  AWS_CODEARTIFACT_DOMAIN_OWNER: 767398085282
  AWS_CODEARTIFACT_DOMAIN: bankmonitor
  AWS_CODEARTIFACT_REGION: eu-west-1
  AWS_CODEARTIFACT_REPOSITORY: bm-apis

jobs:
  get-affected-apis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          json: true
          escape_json: false
          files: |
             specs/*.yml

    outputs:
      # ACMR files (Added, Copied, Modified, Renamed)
      affected: ${{ steps.changed-files.outputs.all_changed_files }}

  npm-publish:
    runs-on: ubuntu-latest
    needs: [get-affected-apis]

    if: ${{ needs.get-affected-apis.outputs.affected != '[]'}}

    strategy:
      fail-fast: false
      max-parallel: 4
      matrix: 
        apifile: ${{ fromJSON(needs.get-affected-apis.outputs.affected) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get API version
        id: openapi-version
        uses: mikefarah/yq@master
        with:
          cmd: echo "version=$(yq '.info.version' ${{ matrix.apifile }}) >> "${GITHUB_OUTPUT}"

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "21"
    
      - name: Npm Install
        working-directory: npm
        env:
          API_NPM_VERSION: ${{ steps.openapi-version.outputs.version }}
          API_FILEPATH: ../${{ matrix.apifile }}
        run: |
          export API_NPM_NAME=$(basename ${API_FILEPATH%.*})
          envsubst < package.json.tmpl > package.json
          cat package.json
          npm install

      - name: Generate OpenAPI stubs
        working-directory: npm
        run: npm run gen

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_CODEARTIFACT_REGION }}

      - name: Authenticate to AWS CodeArtifact
        id: aws-auth
        run: |
          echo "token=$(aws codeartifact get-authorization-token --domain ${AWS_CODEARTIFACT_DOMAIN} --domain-owner ${AWS_CODEARTIFACT_DOMAIN_OWNER} --query authorizationToken --output text)" >> "${GITHUB_OUTPUT}"
          cat ${GITHUB_OUTPUT}

      - name: Publish to AWS CodeArtifact
        env:
          AWS_CODEARTIFACT_AUTH_TOKEN: ${{ steps.aws-auth.outputs.token }} 
        working-directory: npm
        run: |
          envsubst < npmrc.tmpl > .npmrc
          npm publish

  maven-publish:
    runs-on: ubuntu-latest
    needs: [get-affected-apis]

    if: ${{ needs.get-affected-apis.outputs.affected != '[]' }}

    strategy:
      fail-fast: false
      max-parallel: 4
      matrix: 
        apifile: ${{ fromJSON(needs.get-affected-apis.outputs.affected) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get API version
        id: openapi-version
        uses: mikefarah/yq@master
        with:
          cmd: echo "version=$(yq '.info.version' ${{ matrix.apifile }}) >> "${GITHUB_OUTPUT}"

      - name: Setup Java and Maven
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
    
      - name: Configure Maven Project
        working-directory: maven
        env:
          API_MAVEN_VERSION: ${{ steps.openapi-version.outputs.version }}
          API_FILEPATH: ../${{ matrix.apifile }}
        run: |
          export API_MAVEN_NAME=$(basename ${API_FILEPATH%.*})
          envsubst < ${API_MAVEN_NAME}.xml.tmpl > pom.xml
          cat pom.xml

      - name: Build Maven Package
        working-directory: maven
        run: |
          mvn clean install package

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_CODEARTIFACT_REGION }}

      - name: Authenticate to AWS CodeArtifact
        id: aws-auth
        run: |
          echo "token=$(aws codeartifact get-authorization-token --domain ${AWS_CODEARTIFACT_DOMAIN} --domain-owner ${AWS_CODEARTIFACT_DOMAIN_OWNER} --query authorizationToken --output text)" >> "${GITHUB_OUTPUT}"
          cat ${GITHUB_OUTPUT}

      - name: Publish to AWS CodeArtifact
        env:
          AWS_CODEARTIFACT_AUTH_TOKEN: ${{ steps.aws-auth.outputs.token }} 
        working-directory: maven
        run: |
          envsubst < settings.xml.tmpl > settings.xml
          cat settings.xml
          mvn -s settings.xml deploy