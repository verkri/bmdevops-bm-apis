openapi: 3.0.2
servers:
  - url: /v1
info:
  description: |-
    Bankmonitor Bugstore API definition.
  version: 1.0.0
  title: Bankmonitor Bugstore API
  contact:
    email: support.it@bankmonitor.hu
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: bug
    description: Everything about your Bugs
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
paths:
  /bug:
    post:
      tags:
        - bug
      summary: Add a new bug to the store
      description: Add a new bug to the store
      operationId: addBug
      responses:
        '200':
          description: Successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Bug'
            application/json:
              schema:
                $ref: '#/components/schemas/Bug'
        '405':
          description: Invalid input
      security:
        - bugstore_auth:
            - 'write:bugs'
            - 'read:bugs'
      requestBody:
        description: Create a new bug in the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bug'
          application/xml:
            schema:
              $ref: '#/components/schemas/Bug'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Bug'
    put:
      tags:
        - bug
      summary: Update an existing bug
      description: Update an existing bug by Id
      operationId: updateBug
      responses:
        '200':
          description: Successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Bug'
            application/json:
              schema:
                $ref: '#/components/schemas/Bug'
        '400':
          description: Invalid ID supplied
        '404':
          description: Bug not found
        '405':
          description: Validation exception
      security:
        - bugstore_auth:
            - 'write:bugs'
            - 'read:bugs'
      requestBody:
        description: Update an existent bug in the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bug'
          application/xml:
            schema:
              $ref: '#/components/schemas/Bug'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Bug'
  /bug/findByStatus:
    get:
      tags:
        - bug
      summary: Finds Bugs by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findBugsByStatus
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: false
          explode: true
          schema:
            type: string
            enum:
              - available
              - pending
              - sold
            default: available
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bug'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bug'
        '400':
          description: Invalid status value
      security:
        - bugstore_auth:
            - 'write:bugs'
            - 'read:bugs'
  /bug/findByTags:
    get:
      tags:
        - bug
      summary: Finds Bugs by tags
      description: >-
        Multiple tags can be provided with comma separated strings. Use tag1,
        tag2, tag3 for testing.
      operationId: findBugsByTags
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bug'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bug'
        '400':
          description: Invalid tag value
      security:
        - bugstore_auth:
            - 'write:bugs'
            - 'read:bugs'
  '/bug/{bugId}':
    get:
      tags:
        - bug
      summary: Find bug by ID
      description: Returns a single bug
      operationId: getBugById
      parameters:
        - name: bugId
          in: path
          description: ID of bug to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Bug'
            application/json:
              schema:
                $ref: '#/components/schemas/Bug'
        '400':
          description: Invalid ID supplied
        '404':
          description: Bug not found
      security:
        - api_key: []
        - bugstore_auth:
            - 'write:bugs'
            - 'read:bugs'
    post:
      tags:
        - bug
      summary: Updates a bug in the store with form data
      description: ''
      operationId: updateBugWithForm
      parameters:
        - name: bugId
          in: path
          description: ID of bug that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Name of bug that needs to be updated
          schema:
            type: string
        - name: status
          in: query
          description: Status of bug that needs to be updated
          schema:
            type: string
      responses:
        '405':
          description: Invalid input
      security:
        - bugstore_auth:
            - 'write:bugs'
            - 'read:bugs'
    delete:
      tags:
        - bug
      summary: Deletes a bug
      description: ''
      operationId: deleteBug
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: bugId
          in: path
          description: Bug id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid bug value
      security:
        - bugstore_auth:
            - 'write:bugs'
            - 'read:bugs'
components:
  schemas:
    Category:
      x-swagger-router-model: io.swagger.bugstore.model.Category
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Dogs
      xml:
        name: category
      type: object
    Tag:
      x-swagger-router-model: io.swagger.bugstore.model.Tag
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: tag
      type: object
    Bug:
      x-swagger-router-model: io.swagger.bugstore.model.Bug
      required:
        - photoUrls
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: doggie
        chipNumber:
          type: string
          example: HU-12345-12
        category:
          $ref: '#/components/schemas/Category'
        photoUrls:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: photoUrl
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
            xml:
              name: tag
        status:
          type: string
          description: bug status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: bug
      type: object
  securitySchemes:
    bugstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://bugstore.swagger.io/oauth/authorize'
          scopes:
            'write:bugs': modify bugs in your account
            'read:bugs': read your bugs
    api_key:
      type: apiKey
      name: api_key
      in: header